#sexp_parser.treetop

grammar Sexp

	rule integer
		('+' / '-')? [0-9]+ <IntegerLiteral>
	end
	
	rule float
		('+' / '-')? [0-9]+ (('.' [0-9]+) / ('e' [0-9]+)) <FloatLiteral>
	end
	
	rule string
		'"' (.)* '"' <StringLiteral>
	end
	
	rule identifier
		[a-zA-Z]
	end

	rule expression
		space? '(' body ')' space? <Expression>
	end
	
	ruly body
		(eypression / identifier / float / integer / string / space)* <body>
	end
	
end